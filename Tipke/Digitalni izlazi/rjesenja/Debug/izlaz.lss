
izlaz.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000060e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000007c  00800060  0000060e  000006a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000032  008000dc  008000dc  0000071e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000071e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000750  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  0000078c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a5c  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000077d  00000000  00000000  00001268  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004fb  00000000  00000000  000019e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00001ee0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045e  00000000  00000000  0000203c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000035e  00000000  00000000  0000249a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000027f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 b4 00 	jmp	0x168	; 0x168 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e0       	ldi	r30, 0x0E	; 14
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 3d       	cpi	r26, 0xDC	; 220
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	ac ed       	ldi	r26, 0xDC	; 220
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 30       	cpi	r26, 0x0E	; 14
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 05 03 	jmp	0x60a	; 0x60a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
// Define F_CPU once, matching USART.h (8 MHz assumed)
#define F_CPU 1000000UL

int main(void) {
	// Initialize USART at 9600 baud
	usart_init(9600);
  92:	60 e8       	ldi	r22, 0x80	; 128
  94:	75 e2       	ldi	r23, 0x25	; 37
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	0e 94 8a 00 	call	0x114	; 0x114 <usart_init>
	
	// Send startup message
	usart_write_string("===== USART Test Start =====\r\n");
  9e:	82 e6       	ldi	r24, 0x62	; 98
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	0e 94 ed 00 	call	0x1da	; 0x1da <usart_write_string>
	usart_write_string("F_CPU: 8000000 Hz, Baud: 9600. Ensure Realterm is Open on COM5!\r\n");
  a6:	81 e8       	ldi	r24, 0x81	; 129
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 ed 00 	call	0x1da	; 0x1da <usart_write_string>
	
	uint8_t counter = 0;
  ae:	c0 e0       	ldi	r28, 0x00	; 0
	while (1) {
		usart_write_string("Upaljeno radi, brojac: ");
		if (counter < 10) {
			usart_write_char('0' + counter);
			} else {
			usart_write_char('0' + (counter / 10));
  b0:	1d ec       	ldi	r17, 0xCD	; 205
	usart_write_string("===== USART Test Start =====\r\n");
	usart_write_string("F_CPU: 8000000 Hz, Baud: 9600. Ensure Realterm is Open on COM5!\r\n");
	
	uint8_t counter = 0;
	while (1) {
		usart_write_string("Upaljeno radi, brojac: ");
  b2:	83 ec       	ldi	r24, 0xC3	; 195
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	0e 94 ed 00 	call	0x1da	; 0x1da <usart_write_string>
		if (counter < 10) {
  ba:	ca 30       	cpi	r28, 0x0A	; 10
  bc:	28 f4       	brcc	.+10     	; 0xc8 <main+0x36>
			usart_write_char('0' + counter);
  be:	80 e3       	ldi	r24, 0x30	; 48
  c0:	8c 0f       	add	r24, r28
  c2:	0e 94 b0 00 	call	0x160	; 0x160 <usart_write_char>
  c6:	14 c0       	rjmp	.+40     	; 0xf0 <main+0x5e>
			} else {
			usart_write_char('0' + (counter / 10));
  c8:	c1 9f       	mul	r28, r17
  ca:	d1 2d       	mov	r29, r1
  cc:	11 24       	eor	r1, r1
  ce:	d6 95       	lsr	r29
  d0:	d6 95       	lsr	r29
  d2:	d6 95       	lsr	r29
  d4:	80 e3       	ldi	r24, 0x30	; 48
  d6:	8d 0f       	add	r24, r29
  d8:	0e 94 b0 00 	call	0x160	; 0x160 <usart_write_char>
			usart_write_char('0' + (counter % 10));
  dc:	dd 0f       	add	r29, r29
  de:	8d 2f       	mov	r24, r29
  e0:	88 0f       	add	r24, r24
  e2:	88 0f       	add	r24, r24
  e4:	d8 0f       	add	r29, r24
  e6:	8c 2f       	mov	r24, r28
  e8:	8d 1b       	sub	r24, r29
  ea:	80 5d       	subi	r24, 0xD0	; 208
  ec:	0e 94 b0 00 	call	0x160	; 0x160 <usart_write_char>
		}
		usart_write_string("\r\n");
  f0:	80 ec       	ldi	r24, 0xC0	; 192
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 ed 00 	call	0x1da	; 0x1da <usart_write_string>
		counter++;
  f8:	cf 5f       	subi	r28, 0xFF	; 255
		if (counter >= 100) counter = 0;
  fa:	c4 36       	cpi	r28, 0x64	; 100
  fc:	08 f0       	brcs	.+2      	; 0x100 <main+0x6e>
  fe:	c0 e0       	ldi	r28, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	83 ed       	ldi	r24, 0xD3	; 211
 104:	90 e3       	ldi	r25, 0x30	; 48
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x74>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x7e>
 110:	00 00       	nop
 112:	cf cf       	rjmp	.-98     	; 0xb2 <main+0x20>

00000114 <usart_init>:
	}
	
	else
	
		return false;
}
 114:	0e 94 0a 02 	call	0x414	; 0x414 <__floatunsisf>
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	40 e8       	ldi	r20, 0x80	; 128
 11e:	51 e4       	ldi	r21, 0x41	; 65
 120:	0e 94 98 02 	call	0x530	; 0x530 <__mulsf3>
 124:	9b 01       	movw	r18, r22
 126:	ac 01       	movw	r20, r24
 128:	60 e0       	ldi	r22, 0x00	; 0
 12a:	74 e2       	ldi	r23, 0x24	; 36
 12c:	84 ef       	ldi	r24, 0xF4	; 244
 12e:	9a e4       	ldi	r25, 0x4A	; 74
 130:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__divsf3>
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	40 e8       	ldi	r20, 0x80	; 128
 13a:	5f e3       	ldi	r21, 0x3F	; 63
 13c:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__subsf3>
 140:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__fixunssfsi>
 144:	69 b9       	out	0x09, r22	; 9
 146:	70 bd       	out	0x20, r23	; 32
 148:	80 b5       	in	r24, 0x20	; 32
 14a:	86 68       	ori	r24, 0x86	; 134
 14c:	80 bd       	out	0x20, r24	; 32
 14e:	8a b1       	in	r24, 0x0a	; 10
 150:	88 61       	ori	r24, 0x18	; 24
 152:	8a b9       	out	0x0a, r24	; 10
 154:	57 9a       	sbi	0x0a, 7	; 10
 156:	08 95       	ret

00000158 <usart_read_char>:
 158:	5f 9b       	sbis	0x0b, 7	; 11
 15a:	fe cf       	rjmp	.-4      	; 0x158 <usart_read_char>
 15c:	8c b1       	in	r24, 0x0c	; 12
 15e:	08 95       	ret

00000160 <usart_write_char>:
 160:	5d 9b       	sbis	0x0b, 5	; 11
 162:	fe cf       	rjmp	.-4      	; 0x160 <usart_write_char>
 164:	8c b9       	out	0x0c, r24	; 12
 166:	08 95       	ret

00000168 <__vector_11>:
 168:	1f 92       	push	r1
 16a:	0f 92       	push	r0
 16c:	0f b6       	in	r0, 0x3f	; 63
 16e:	0f 92       	push	r0
 170:	11 24       	eor	r1, r1
 172:	2f 93       	push	r18
 174:	3f 93       	push	r19
 176:	4f 93       	push	r20
 178:	5f 93       	push	r21
 17a:	6f 93       	push	r22
 17c:	7f 93       	push	r23
 17e:	8f 93       	push	r24
 180:	9f 93       	push	r25
 182:	af 93       	push	r26
 184:	bf 93       	push	r27
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	ef 93       	push	r30
 18c:	ff 93       	push	r31
 18e:	c0 91 60 00 	lds	r28, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 192:	d0 91 61 00 	lds	r29, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 196:	0e 94 ac 00 	call	0x158	; 0x158 <usart_read_char>
 19a:	88 83       	st	Y, r24
 19c:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1a0:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1a4:	80 81       	ld	r24, Z
 1a6:	8d 30       	cpi	r24, 0x0D	; 13
 1a8:	29 f0       	breq	.+10     	; 0x1b4 <__vector_11+0x4c>
 1aa:	31 96       	adiw	r30, 0x01	; 1
 1ac:	f0 93 61 00 	sts	0x0061, r31	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1b0:	e0 93 60 00 	sts	0x0060, r30	; 0x800060 <__DATA_REGION_ORIGIN__>
 1b4:	ff 91       	pop	r31
 1b6:	ef 91       	pop	r30
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	bf 91       	pop	r27
 1be:	af 91       	pop	r26
 1c0:	9f 91       	pop	r25
 1c2:	8f 91       	pop	r24
 1c4:	7f 91       	pop	r23
 1c6:	6f 91       	pop	r22
 1c8:	5f 91       	pop	r21
 1ca:	4f 91       	pop	r20
 1cc:	3f 91       	pop	r19
 1ce:	2f 91       	pop	r18
 1d0:	0f 90       	pop	r0
 1d2:	0f be       	out	0x3f, r0	; 63
 1d4:	0f 90       	pop	r0
 1d6:	1f 90       	pop	r1
 1d8:	18 95       	reti

000001da <usart_write_string>:

void usart_write_int(int16_t a){
	usart_write("%d",a);
}

void usart_write_string(char *a){
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	ec 01       	movw	r28, r24

	while (*a){
 1e0:	88 81       	ld	r24, Y
 1e2:	88 23       	and	r24, r24
 1e4:	31 f0       	breq	.+12     	; 0x1f2 <usart_write_string+0x18>
 1e6:	21 96       	adiw	r28, 0x01	; 1
		usart_write_char(*a);
 1e8:	0e 94 b0 00 	call	0x160	; 0x160 <usart_write_char>
	usart_write("%d",a);
}

void usart_write_string(char *a){

	while (*a){
 1ec:	89 91       	ld	r24, Y+
 1ee:	81 11       	cpse	r24, r1
 1f0:	fb cf       	rjmp	.-10     	; 0x1e8 <usart_write_string+0xe>
		usart_write_char(*a);
		a++;			
	}
}
 1f2:	df 91       	pop	r29
 1f4:	cf 91       	pop	r28
 1f6:	08 95       	ret

000001f8 <__subsf3>:
 1f8:	50 58       	subi	r21, 0x80	; 128

000001fa <__addsf3>:
 1fa:	bb 27       	eor	r27, r27
 1fc:	aa 27       	eor	r26, r26
 1fe:	0e 94 14 01 	call	0x228	; 0x228 <__addsf3x>
 202:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__fp_round>
 206:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__fp_pscA>
 20a:	38 f0       	brcs	.+14     	; 0x21a <__addsf3+0x20>
 20c:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_pscB>
 210:	20 f0       	brcs	.+8      	; 0x21a <__addsf3+0x20>
 212:	39 f4       	brne	.+14     	; 0x222 <__addsf3+0x28>
 214:	9f 3f       	cpi	r25, 0xFF	; 255
 216:	19 f4       	brne	.+6      	; 0x21e <__addsf3+0x24>
 218:	26 f4       	brtc	.+8      	; 0x222 <__addsf3+0x28>
 21a:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__fp_nan>
 21e:	0e f4       	brtc	.+2      	; 0x222 <__addsf3+0x28>
 220:	e0 95       	com	r30
 222:	e7 fb       	bst	r30, 7
 224:	0c 94 47 02 	jmp	0x48e	; 0x48e <__fp_inf>

00000228 <__addsf3x>:
 228:	e9 2f       	mov	r30, r25
 22a:	0e 94 6f 02 	call	0x4de	; 0x4de <__fp_split3>
 22e:	58 f3       	brcs	.-42     	; 0x206 <__addsf3+0xc>
 230:	ba 17       	cp	r27, r26
 232:	62 07       	cpc	r22, r18
 234:	73 07       	cpc	r23, r19
 236:	84 07       	cpc	r24, r20
 238:	95 07       	cpc	r25, r21
 23a:	20 f0       	brcs	.+8      	; 0x244 <__addsf3x+0x1c>
 23c:	79 f4       	brne	.+30     	; 0x25c <__addsf3x+0x34>
 23e:	a6 f5       	brtc	.+104    	; 0x2a8 <__addsf3x+0x80>
 240:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_zero>
 244:	0e f4       	brtc	.+2      	; 0x248 <__addsf3x+0x20>
 246:	e0 95       	com	r30
 248:	0b 2e       	mov	r0, r27
 24a:	ba 2f       	mov	r27, r26
 24c:	a0 2d       	mov	r26, r0
 24e:	0b 01       	movw	r0, r22
 250:	b9 01       	movw	r22, r18
 252:	90 01       	movw	r18, r0
 254:	0c 01       	movw	r0, r24
 256:	ca 01       	movw	r24, r20
 258:	a0 01       	movw	r20, r0
 25a:	11 24       	eor	r1, r1
 25c:	ff 27       	eor	r31, r31
 25e:	59 1b       	sub	r21, r25
 260:	99 f0       	breq	.+38     	; 0x288 <__addsf3x+0x60>
 262:	59 3f       	cpi	r21, 0xF9	; 249
 264:	50 f4       	brcc	.+20     	; 0x27a <__addsf3x+0x52>
 266:	50 3e       	cpi	r21, 0xE0	; 224
 268:	68 f1       	brcs	.+90     	; 0x2c4 <__addsf3x+0x9c>
 26a:	1a 16       	cp	r1, r26
 26c:	f0 40       	sbci	r31, 0x00	; 0
 26e:	a2 2f       	mov	r26, r18
 270:	23 2f       	mov	r18, r19
 272:	34 2f       	mov	r19, r20
 274:	44 27       	eor	r20, r20
 276:	58 5f       	subi	r21, 0xF8	; 248
 278:	f3 cf       	rjmp	.-26     	; 0x260 <__addsf3x+0x38>
 27a:	46 95       	lsr	r20
 27c:	37 95       	ror	r19
 27e:	27 95       	ror	r18
 280:	a7 95       	ror	r26
 282:	f0 40       	sbci	r31, 0x00	; 0
 284:	53 95       	inc	r21
 286:	c9 f7       	brne	.-14     	; 0x27a <__addsf3x+0x52>
 288:	7e f4       	brtc	.+30     	; 0x2a8 <__addsf3x+0x80>
 28a:	1f 16       	cp	r1, r31
 28c:	ba 0b       	sbc	r27, r26
 28e:	62 0b       	sbc	r22, r18
 290:	73 0b       	sbc	r23, r19
 292:	84 0b       	sbc	r24, r20
 294:	ba f0       	brmi	.+46     	; 0x2c4 <__addsf3x+0x9c>
 296:	91 50       	subi	r25, 0x01	; 1
 298:	a1 f0       	breq	.+40     	; 0x2c2 <__addsf3x+0x9a>
 29a:	ff 0f       	add	r31, r31
 29c:	bb 1f       	adc	r27, r27
 29e:	66 1f       	adc	r22, r22
 2a0:	77 1f       	adc	r23, r23
 2a2:	88 1f       	adc	r24, r24
 2a4:	c2 f7       	brpl	.-16     	; 0x296 <__addsf3x+0x6e>
 2a6:	0e c0       	rjmp	.+28     	; 0x2c4 <__addsf3x+0x9c>
 2a8:	ba 0f       	add	r27, r26
 2aa:	62 1f       	adc	r22, r18
 2ac:	73 1f       	adc	r23, r19
 2ae:	84 1f       	adc	r24, r20
 2b0:	48 f4       	brcc	.+18     	; 0x2c4 <__addsf3x+0x9c>
 2b2:	87 95       	ror	r24
 2b4:	77 95       	ror	r23
 2b6:	67 95       	ror	r22
 2b8:	b7 95       	ror	r27
 2ba:	f7 95       	ror	r31
 2bc:	9e 3f       	cpi	r25, 0xFE	; 254
 2be:	08 f0       	brcs	.+2      	; 0x2c2 <__addsf3x+0x9a>
 2c0:	b0 cf       	rjmp	.-160    	; 0x222 <__addsf3+0x28>
 2c2:	93 95       	inc	r25
 2c4:	88 0f       	add	r24, r24
 2c6:	08 f0       	brcs	.+2      	; 0x2ca <__addsf3x+0xa2>
 2c8:	99 27       	eor	r25, r25
 2ca:	ee 0f       	add	r30, r30
 2cc:	97 95       	ror	r25
 2ce:	87 95       	ror	r24
 2d0:	08 95       	ret

000002d2 <__divsf3>:
 2d2:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__divsf3x>
 2d6:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__fp_round>
 2da:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_pscB>
 2de:	58 f0       	brcs	.+22     	; 0x2f6 <__divsf3+0x24>
 2e0:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__fp_pscA>
 2e4:	40 f0       	brcs	.+16     	; 0x2f6 <__divsf3+0x24>
 2e6:	29 f4       	brne	.+10     	; 0x2f2 <__divsf3+0x20>
 2e8:	5f 3f       	cpi	r21, 0xFF	; 255
 2ea:	29 f0       	breq	.+10     	; 0x2f6 <__divsf3+0x24>
 2ec:	0c 94 47 02 	jmp	0x48e	; 0x48e <__fp_inf>
 2f0:	51 11       	cpse	r21, r1
 2f2:	0c 94 92 02 	jmp	0x524	; 0x524 <__fp_szero>
 2f6:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__fp_nan>

000002fa <__divsf3x>:
 2fa:	0e 94 6f 02 	call	0x4de	; 0x4de <__fp_split3>
 2fe:	68 f3       	brcs	.-38     	; 0x2da <__divsf3+0x8>

00000300 <__divsf3_pse>:
 300:	99 23       	and	r25, r25
 302:	b1 f3       	breq	.-20     	; 0x2f0 <__divsf3+0x1e>
 304:	55 23       	and	r21, r21
 306:	91 f3       	breq	.-28     	; 0x2ec <__divsf3+0x1a>
 308:	95 1b       	sub	r25, r21
 30a:	55 0b       	sbc	r21, r21
 30c:	bb 27       	eor	r27, r27
 30e:	aa 27       	eor	r26, r26
 310:	62 17       	cp	r22, r18
 312:	73 07       	cpc	r23, r19
 314:	84 07       	cpc	r24, r20
 316:	38 f0       	brcs	.+14     	; 0x326 <__divsf3_pse+0x26>
 318:	9f 5f       	subi	r25, 0xFF	; 255
 31a:	5f 4f       	sbci	r21, 0xFF	; 255
 31c:	22 0f       	add	r18, r18
 31e:	33 1f       	adc	r19, r19
 320:	44 1f       	adc	r20, r20
 322:	aa 1f       	adc	r26, r26
 324:	a9 f3       	breq	.-22     	; 0x310 <__divsf3_pse+0x10>
 326:	35 d0       	rcall	.+106    	; 0x392 <__divsf3_pse+0x92>
 328:	0e 2e       	mov	r0, r30
 32a:	3a f0       	brmi	.+14     	; 0x33a <__divsf3_pse+0x3a>
 32c:	e0 e8       	ldi	r30, 0x80	; 128
 32e:	32 d0       	rcall	.+100    	; 0x394 <__divsf3_pse+0x94>
 330:	91 50       	subi	r25, 0x01	; 1
 332:	50 40       	sbci	r21, 0x00	; 0
 334:	e6 95       	lsr	r30
 336:	00 1c       	adc	r0, r0
 338:	ca f7       	brpl	.-14     	; 0x32c <__divsf3_pse+0x2c>
 33a:	2b d0       	rcall	.+86     	; 0x392 <__divsf3_pse+0x92>
 33c:	fe 2f       	mov	r31, r30
 33e:	29 d0       	rcall	.+82     	; 0x392 <__divsf3_pse+0x92>
 340:	66 0f       	add	r22, r22
 342:	77 1f       	adc	r23, r23
 344:	88 1f       	adc	r24, r24
 346:	bb 1f       	adc	r27, r27
 348:	26 17       	cp	r18, r22
 34a:	37 07       	cpc	r19, r23
 34c:	48 07       	cpc	r20, r24
 34e:	ab 07       	cpc	r26, r27
 350:	b0 e8       	ldi	r27, 0x80	; 128
 352:	09 f0       	breq	.+2      	; 0x356 <__divsf3_pse+0x56>
 354:	bb 0b       	sbc	r27, r27
 356:	80 2d       	mov	r24, r0
 358:	bf 01       	movw	r22, r30
 35a:	ff 27       	eor	r31, r31
 35c:	93 58       	subi	r25, 0x83	; 131
 35e:	5f 4f       	sbci	r21, 0xFF	; 255
 360:	3a f0       	brmi	.+14     	; 0x370 <__divsf3_pse+0x70>
 362:	9e 3f       	cpi	r25, 0xFE	; 254
 364:	51 05       	cpc	r21, r1
 366:	78 f0       	brcs	.+30     	; 0x386 <__divsf3_pse+0x86>
 368:	0c 94 47 02 	jmp	0x48e	; 0x48e <__fp_inf>
 36c:	0c 94 92 02 	jmp	0x524	; 0x524 <__fp_szero>
 370:	5f 3f       	cpi	r21, 0xFF	; 255
 372:	e4 f3       	brlt	.-8      	; 0x36c <__divsf3_pse+0x6c>
 374:	98 3e       	cpi	r25, 0xE8	; 232
 376:	d4 f3       	brlt	.-12     	; 0x36c <__divsf3_pse+0x6c>
 378:	86 95       	lsr	r24
 37a:	77 95       	ror	r23
 37c:	67 95       	ror	r22
 37e:	b7 95       	ror	r27
 380:	f7 95       	ror	r31
 382:	9f 5f       	subi	r25, 0xFF	; 255
 384:	c9 f7       	brne	.-14     	; 0x378 <__divsf3_pse+0x78>
 386:	88 0f       	add	r24, r24
 388:	91 1d       	adc	r25, r1
 38a:	96 95       	lsr	r25
 38c:	87 95       	ror	r24
 38e:	97 f9       	bld	r25, 7
 390:	08 95       	ret
 392:	e1 e0       	ldi	r30, 0x01	; 1
 394:	66 0f       	add	r22, r22
 396:	77 1f       	adc	r23, r23
 398:	88 1f       	adc	r24, r24
 39a:	bb 1f       	adc	r27, r27
 39c:	62 17       	cp	r22, r18
 39e:	73 07       	cpc	r23, r19
 3a0:	84 07       	cpc	r24, r20
 3a2:	ba 07       	cpc	r27, r26
 3a4:	20 f0       	brcs	.+8      	; 0x3ae <__divsf3_pse+0xae>
 3a6:	62 1b       	sub	r22, r18
 3a8:	73 0b       	sbc	r23, r19
 3aa:	84 0b       	sbc	r24, r20
 3ac:	ba 0b       	sbc	r27, r26
 3ae:	ee 1f       	adc	r30, r30
 3b0:	88 f7       	brcc	.-30     	; 0x394 <__divsf3_pse+0x94>
 3b2:	e0 95       	com	r30
 3b4:	08 95       	ret

000003b6 <__fixunssfsi>:
 3b6:	0e 94 77 02 	call	0x4ee	; 0x4ee <__fp_splitA>
 3ba:	88 f0       	brcs	.+34     	; 0x3de <__fixunssfsi+0x28>
 3bc:	9f 57       	subi	r25, 0x7F	; 127
 3be:	98 f0       	brcs	.+38     	; 0x3e6 <__fixunssfsi+0x30>
 3c0:	b9 2f       	mov	r27, r25
 3c2:	99 27       	eor	r25, r25
 3c4:	b7 51       	subi	r27, 0x17	; 23
 3c6:	b0 f0       	brcs	.+44     	; 0x3f4 <__fixunssfsi+0x3e>
 3c8:	e1 f0       	breq	.+56     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ca:	66 0f       	add	r22, r22
 3cc:	77 1f       	adc	r23, r23
 3ce:	88 1f       	adc	r24, r24
 3d0:	99 1f       	adc	r25, r25
 3d2:	1a f0       	brmi	.+6      	; 0x3da <__fixunssfsi+0x24>
 3d4:	ba 95       	dec	r27
 3d6:	c9 f7       	brne	.-14     	; 0x3ca <__fixunssfsi+0x14>
 3d8:	14 c0       	rjmp	.+40     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3da:	b1 30       	cpi	r27, 0x01	; 1
 3dc:	91 f0       	breq	.+36     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3de:	0e 94 91 02 	call	0x522	; 0x522 <__fp_zero>
 3e2:	b1 e0       	ldi	r27, 0x01	; 1
 3e4:	08 95       	ret
 3e6:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_zero>
 3ea:	67 2f       	mov	r22, r23
 3ec:	78 2f       	mov	r23, r24
 3ee:	88 27       	eor	r24, r24
 3f0:	b8 5f       	subi	r27, 0xF8	; 248
 3f2:	39 f0       	breq	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f4:	b9 3f       	cpi	r27, 0xF9	; 249
 3f6:	cc f3       	brlt	.-14     	; 0x3ea <__fixunssfsi+0x34>
 3f8:	86 95       	lsr	r24
 3fa:	77 95       	ror	r23
 3fc:	67 95       	ror	r22
 3fe:	b3 95       	inc	r27
 400:	d9 f7       	brne	.-10     	; 0x3f8 <__fixunssfsi+0x42>
 402:	3e f4       	brtc	.+14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 404:	90 95       	com	r25
 406:	80 95       	com	r24
 408:	70 95       	com	r23
 40a:	61 95       	neg	r22
 40c:	7f 4f       	sbci	r23, 0xFF	; 255
 40e:	8f 4f       	sbci	r24, 0xFF	; 255
 410:	9f 4f       	sbci	r25, 0xFF	; 255
 412:	08 95       	ret

00000414 <__floatunsisf>:
 414:	e8 94       	clt
 416:	09 c0       	rjmp	.+18     	; 0x42a <__floatsisf+0x12>

00000418 <__floatsisf>:
 418:	97 fb       	bst	r25, 7
 41a:	3e f4       	brtc	.+14     	; 0x42a <__floatsisf+0x12>
 41c:	90 95       	com	r25
 41e:	80 95       	com	r24
 420:	70 95       	com	r23
 422:	61 95       	neg	r22
 424:	7f 4f       	sbci	r23, 0xFF	; 255
 426:	8f 4f       	sbci	r24, 0xFF	; 255
 428:	9f 4f       	sbci	r25, 0xFF	; 255
 42a:	99 23       	and	r25, r25
 42c:	a9 f0       	breq	.+42     	; 0x458 <__floatsisf+0x40>
 42e:	f9 2f       	mov	r31, r25
 430:	96 e9       	ldi	r25, 0x96	; 150
 432:	bb 27       	eor	r27, r27
 434:	93 95       	inc	r25
 436:	f6 95       	lsr	r31
 438:	87 95       	ror	r24
 43a:	77 95       	ror	r23
 43c:	67 95       	ror	r22
 43e:	b7 95       	ror	r27
 440:	f1 11       	cpse	r31, r1
 442:	f8 cf       	rjmp	.-16     	; 0x434 <__floatsisf+0x1c>
 444:	fa f4       	brpl	.+62     	; 0x484 <__stack+0x25>
 446:	bb 0f       	add	r27, r27
 448:	11 f4       	brne	.+4      	; 0x44e <__floatsisf+0x36>
 44a:	60 ff       	sbrs	r22, 0
 44c:	1b c0       	rjmp	.+54     	; 0x484 <__stack+0x25>
 44e:	6f 5f       	subi	r22, 0xFF	; 255
 450:	7f 4f       	sbci	r23, 0xFF	; 255
 452:	8f 4f       	sbci	r24, 0xFF	; 255
 454:	9f 4f       	sbci	r25, 0xFF	; 255
 456:	16 c0       	rjmp	.+44     	; 0x484 <__stack+0x25>
 458:	88 23       	and	r24, r24
 45a:	11 f0       	breq	.+4      	; 0x460 <__stack+0x1>
 45c:	96 e9       	ldi	r25, 0x96	; 150
 45e:	11 c0       	rjmp	.+34     	; 0x482 <__stack+0x23>
 460:	77 23       	and	r23, r23
 462:	21 f0       	breq	.+8      	; 0x46c <__stack+0xd>
 464:	9e e8       	ldi	r25, 0x8E	; 142
 466:	87 2f       	mov	r24, r23
 468:	76 2f       	mov	r23, r22
 46a:	05 c0       	rjmp	.+10     	; 0x476 <__stack+0x17>
 46c:	66 23       	and	r22, r22
 46e:	71 f0       	breq	.+28     	; 0x48c <__stack+0x2d>
 470:	96 e8       	ldi	r25, 0x86	; 134
 472:	86 2f       	mov	r24, r22
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	60 e0       	ldi	r22, 0x00	; 0
 478:	2a f0       	brmi	.+10     	; 0x484 <__stack+0x25>
 47a:	9a 95       	dec	r25
 47c:	66 0f       	add	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	88 1f       	adc	r24, r24
 482:	da f7       	brpl	.-10     	; 0x47a <__stack+0x1b>
 484:	88 0f       	add	r24, r24
 486:	96 95       	lsr	r25
 488:	87 95       	ror	r24
 48a:	97 f9       	bld	r25, 7
 48c:	08 95       	ret

0000048e <__fp_inf>:
 48e:	97 f9       	bld	r25, 7
 490:	9f 67       	ori	r25, 0x7F	; 127
 492:	80 e8       	ldi	r24, 0x80	; 128
 494:	70 e0       	ldi	r23, 0x00	; 0
 496:	60 e0       	ldi	r22, 0x00	; 0
 498:	08 95       	ret

0000049a <__fp_nan>:
 49a:	9f ef       	ldi	r25, 0xFF	; 255
 49c:	80 ec       	ldi	r24, 0xC0	; 192
 49e:	08 95       	ret

000004a0 <__fp_pscA>:
 4a0:	00 24       	eor	r0, r0
 4a2:	0a 94       	dec	r0
 4a4:	16 16       	cp	r1, r22
 4a6:	17 06       	cpc	r1, r23
 4a8:	18 06       	cpc	r1, r24
 4aa:	09 06       	cpc	r0, r25
 4ac:	08 95       	ret

000004ae <__fp_pscB>:
 4ae:	00 24       	eor	r0, r0
 4b0:	0a 94       	dec	r0
 4b2:	12 16       	cp	r1, r18
 4b4:	13 06       	cpc	r1, r19
 4b6:	14 06       	cpc	r1, r20
 4b8:	05 06       	cpc	r0, r21
 4ba:	08 95       	ret

000004bc <__fp_round>:
 4bc:	09 2e       	mov	r0, r25
 4be:	03 94       	inc	r0
 4c0:	00 0c       	add	r0, r0
 4c2:	11 f4       	brne	.+4      	; 0x4c8 <__fp_round+0xc>
 4c4:	88 23       	and	r24, r24
 4c6:	52 f0       	brmi	.+20     	; 0x4dc <__fp_round+0x20>
 4c8:	bb 0f       	add	r27, r27
 4ca:	40 f4       	brcc	.+16     	; 0x4dc <__fp_round+0x20>
 4cc:	bf 2b       	or	r27, r31
 4ce:	11 f4       	brne	.+4      	; 0x4d4 <__fp_round+0x18>
 4d0:	60 ff       	sbrs	r22, 0
 4d2:	04 c0       	rjmp	.+8      	; 0x4dc <__fp_round+0x20>
 4d4:	6f 5f       	subi	r22, 0xFF	; 255
 4d6:	7f 4f       	sbci	r23, 0xFF	; 255
 4d8:	8f 4f       	sbci	r24, 0xFF	; 255
 4da:	9f 4f       	sbci	r25, 0xFF	; 255
 4dc:	08 95       	ret

000004de <__fp_split3>:
 4de:	57 fd       	sbrc	r21, 7
 4e0:	90 58       	subi	r25, 0x80	; 128
 4e2:	44 0f       	add	r20, r20
 4e4:	55 1f       	adc	r21, r21
 4e6:	59 f0       	breq	.+22     	; 0x4fe <__fp_splitA+0x10>
 4e8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ea:	71 f0       	breq	.+28     	; 0x508 <__fp_splitA+0x1a>
 4ec:	47 95       	ror	r20

000004ee <__fp_splitA>:
 4ee:	88 0f       	add	r24, r24
 4f0:	97 fb       	bst	r25, 7
 4f2:	99 1f       	adc	r25, r25
 4f4:	61 f0       	breq	.+24     	; 0x50e <__fp_splitA+0x20>
 4f6:	9f 3f       	cpi	r25, 0xFF	; 255
 4f8:	79 f0       	breq	.+30     	; 0x518 <__fp_splitA+0x2a>
 4fa:	87 95       	ror	r24
 4fc:	08 95       	ret
 4fe:	12 16       	cp	r1, r18
 500:	13 06       	cpc	r1, r19
 502:	14 06       	cpc	r1, r20
 504:	55 1f       	adc	r21, r21
 506:	f2 cf       	rjmp	.-28     	; 0x4ec <__fp_split3+0xe>
 508:	46 95       	lsr	r20
 50a:	f1 df       	rcall	.-30     	; 0x4ee <__fp_splitA>
 50c:	08 c0       	rjmp	.+16     	; 0x51e <__fp_splitA+0x30>
 50e:	16 16       	cp	r1, r22
 510:	17 06       	cpc	r1, r23
 512:	18 06       	cpc	r1, r24
 514:	99 1f       	adc	r25, r25
 516:	f1 cf       	rjmp	.-30     	; 0x4fa <__fp_splitA+0xc>
 518:	86 95       	lsr	r24
 51a:	71 05       	cpc	r23, r1
 51c:	61 05       	cpc	r22, r1
 51e:	08 94       	sec
 520:	08 95       	ret

00000522 <__fp_zero>:
 522:	e8 94       	clt

00000524 <__fp_szero>:
 524:	bb 27       	eor	r27, r27
 526:	66 27       	eor	r22, r22
 528:	77 27       	eor	r23, r23
 52a:	cb 01       	movw	r24, r22
 52c:	97 f9       	bld	r25, 7
 52e:	08 95       	ret

00000530 <__mulsf3>:
 530:	0e 94 ab 02 	call	0x556	; 0x556 <__mulsf3x>
 534:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__fp_round>
 538:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__fp_pscA>
 53c:	38 f0       	brcs	.+14     	; 0x54c <__mulsf3+0x1c>
 53e:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_pscB>
 542:	20 f0       	brcs	.+8      	; 0x54c <__mulsf3+0x1c>
 544:	95 23       	and	r25, r21
 546:	11 f0       	breq	.+4      	; 0x54c <__mulsf3+0x1c>
 548:	0c 94 47 02 	jmp	0x48e	; 0x48e <__fp_inf>
 54c:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__fp_nan>
 550:	11 24       	eor	r1, r1
 552:	0c 94 92 02 	jmp	0x524	; 0x524 <__fp_szero>

00000556 <__mulsf3x>:
 556:	0e 94 6f 02 	call	0x4de	; 0x4de <__fp_split3>
 55a:	70 f3       	brcs	.-36     	; 0x538 <__mulsf3+0x8>

0000055c <__mulsf3_pse>:
 55c:	95 9f       	mul	r25, r21
 55e:	c1 f3       	breq	.-16     	; 0x550 <__mulsf3+0x20>
 560:	95 0f       	add	r25, r21
 562:	50 e0       	ldi	r21, 0x00	; 0
 564:	55 1f       	adc	r21, r21
 566:	62 9f       	mul	r22, r18
 568:	f0 01       	movw	r30, r0
 56a:	72 9f       	mul	r23, r18
 56c:	bb 27       	eor	r27, r27
 56e:	f0 0d       	add	r31, r0
 570:	b1 1d       	adc	r27, r1
 572:	63 9f       	mul	r22, r19
 574:	aa 27       	eor	r26, r26
 576:	f0 0d       	add	r31, r0
 578:	b1 1d       	adc	r27, r1
 57a:	aa 1f       	adc	r26, r26
 57c:	64 9f       	mul	r22, r20
 57e:	66 27       	eor	r22, r22
 580:	b0 0d       	add	r27, r0
 582:	a1 1d       	adc	r26, r1
 584:	66 1f       	adc	r22, r22
 586:	82 9f       	mul	r24, r18
 588:	22 27       	eor	r18, r18
 58a:	b0 0d       	add	r27, r0
 58c:	a1 1d       	adc	r26, r1
 58e:	62 1f       	adc	r22, r18
 590:	73 9f       	mul	r23, r19
 592:	b0 0d       	add	r27, r0
 594:	a1 1d       	adc	r26, r1
 596:	62 1f       	adc	r22, r18
 598:	83 9f       	mul	r24, r19
 59a:	a0 0d       	add	r26, r0
 59c:	61 1d       	adc	r22, r1
 59e:	22 1f       	adc	r18, r18
 5a0:	74 9f       	mul	r23, r20
 5a2:	33 27       	eor	r19, r19
 5a4:	a0 0d       	add	r26, r0
 5a6:	61 1d       	adc	r22, r1
 5a8:	23 1f       	adc	r18, r19
 5aa:	84 9f       	mul	r24, r20
 5ac:	60 0d       	add	r22, r0
 5ae:	21 1d       	adc	r18, r1
 5b0:	82 2f       	mov	r24, r18
 5b2:	76 2f       	mov	r23, r22
 5b4:	6a 2f       	mov	r22, r26
 5b6:	11 24       	eor	r1, r1
 5b8:	9f 57       	subi	r25, 0x7F	; 127
 5ba:	50 40       	sbci	r21, 0x00	; 0
 5bc:	9a f0       	brmi	.+38     	; 0x5e4 <__mulsf3_pse+0x88>
 5be:	f1 f0       	breq	.+60     	; 0x5fc <__mulsf3_pse+0xa0>
 5c0:	88 23       	and	r24, r24
 5c2:	4a f0       	brmi	.+18     	; 0x5d6 <__mulsf3_pse+0x7a>
 5c4:	ee 0f       	add	r30, r30
 5c6:	ff 1f       	adc	r31, r31
 5c8:	bb 1f       	adc	r27, r27
 5ca:	66 1f       	adc	r22, r22
 5cc:	77 1f       	adc	r23, r23
 5ce:	88 1f       	adc	r24, r24
 5d0:	91 50       	subi	r25, 0x01	; 1
 5d2:	50 40       	sbci	r21, 0x00	; 0
 5d4:	a9 f7       	brne	.-22     	; 0x5c0 <__mulsf3_pse+0x64>
 5d6:	9e 3f       	cpi	r25, 0xFE	; 254
 5d8:	51 05       	cpc	r21, r1
 5da:	80 f0       	brcs	.+32     	; 0x5fc <__mulsf3_pse+0xa0>
 5dc:	0c 94 47 02 	jmp	0x48e	; 0x48e <__fp_inf>
 5e0:	0c 94 92 02 	jmp	0x524	; 0x524 <__fp_szero>
 5e4:	5f 3f       	cpi	r21, 0xFF	; 255
 5e6:	e4 f3       	brlt	.-8      	; 0x5e0 <__mulsf3_pse+0x84>
 5e8:	98 3e       	cpi	r25, 0xE8	; 232
 5ea:	d4 f3       	brlt	.-12     	; 0x5e0 <__mulsf3_pse+0x84>
 5ec:	86 95       	lsr	r24
 5ee:	77 95       	ror	r23
 5f0:	67 95       	ror	r22
 5f2:	b7 95       	ror	r27
 5f4:	f7 95       	ror	r31
 5f6:	e7 95       	ror	r30
 5f8:	9f 5f       	subi	r25, 0xFF	; 255
 5fa:	c1 f7       	brne	.-16     	; 0x5ec <__mulsf3_pse+0x90>
 5fc:	fe 2b       	or	r31, r30
 5fe:	88 0f       	add	r24, r24
 600:	91 1d       	adc	r25, r1
 602:	96 95       	lsr	r25
 604:	87 95       	ror	r24
 606:	97 f9       	bld	r25, 7
 608:	08 95       	ret

0000060a <_exit>:
 60a:	f8 94       	cli

0000060c <__stop_program>:
 60c:	ff cf       	rjmp	.-2      	; 0x60c <__stop_program>
